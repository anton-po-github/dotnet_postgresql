name: CI/CD Pipeline
on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="bash -c 'echo \"db.adminCommand({ ping: 1 }).ok\" \
            | mongosh --quiet mongodb://localhost:27017'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --no-restore -c Release

      - name: Run tests
        env:
          MONGODB_URI: mongodb://localhost:27017/BookstoreDb
        run: dotnet test --no-build --verbosity normal

  build_and_deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image
        run: |
          IMAGE_URI="${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/dotnet_postgresql:${{ github.sha }}"
          docker build -t "$IMAGE_URI" -f Dockerfile .
          docker push "$IMAGE_URI"
          echo "IMAGE_URI=$IMAGE_URI" >> "$GITHUB_ENV"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: dotnet-postgresql-service
          image: ${{ env.IMAGE_URI }}
          region: ${{ secrets.GAR_LOCATION }}
          env_vars: |
            ASPNETCORE_URLS=http://*:$PORT
            ASPNETCORE_HTTP_PORTS=8080
            ConnectionStrings__ChatMessageConnection=${{ secrets.CHATMSG_CONN }}
            ConnectionStrings__PostgresConnection=${{ secrets.POSTGRES_CONN }}
            ConnectionStrings__UsersConnection=${{ secrets.USERS_CONN }}
            ConnectionStrings__IdentityConnection=${{ secrets.IDENTITY_CONN }}
            ConnectionStrings__MongoConnection=${{ secrets.MONGODB_CONN }}
            Token__Key=${{ secrets.TOKEN_KEY }}
            Token__Issuer=${{ secrets.TOKEN_ISSUER }}
            SendGridApiKey=${{ secrets.SENDGRID_API_KEY }}
          env_vars_update_strategy: merge

      - name: Allow unauthenticated invocations
        run: |
          gcloud run services add-iam-policy-binding dotnet-postgresql-service \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --region="${{ secrets.GAR_LOCATION }}"
