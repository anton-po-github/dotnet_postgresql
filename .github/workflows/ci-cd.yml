name: CI/CD Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: 'read'
  id-token: 'write' # для GCP OIDC/Auth

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - run: dotnet restore
      - run: dotnet build --no-restore -c Release
      - run: dotnet test --no-build --verbosity normal

  build_and_push:
    needs: build_and_test
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.build-and-push.outputs.image_uri }}

    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker \
            ${{ secrets.GAR_LOCATION }}-docker.pkg.dev --quiet

      - id: build-and-push
        name: Build, Push and Export Image URI
        run: |
          # Собираем полный URI образа
          IMAGE_URI="${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/dotnet_postgresql:${{ github.sha }}"
          echo "Built image: $IMAGE_URI"
          # Собираем и пушим
          docker build -t "$IMAGE_URI" -f Dockerfile .
          docker push "$IMAGE_URI"
          # Записываем в output шага
          echo "image_uri=$IMAGE_URI" >> "$GITHUB_OUTPUT"

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Debug image URI
        run: |
          echo "Deploying image: ${{ needs.build_and_push.outputs.image_uri }}"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: dotnet-postgresql-service
          image: ${{ needs.build_and_push.outputs.image_uri }}
          region: ${{ secrets.GAR_LOCATION }}
