name: .NET 9 CI

on:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Получить код
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Установить .NET 9
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x' # рекомендуемый подход :contentReference[oaicite:2]{index=2}

      # 3. Сборка приложения
      - name: Build
        run: dotnet build --no-restore

      # 4. Запуск юнит-тестов с параллельностью
      - name: Test with coverage
        run: dotnet test --no-build \
          --collect:"XPlat Code Coverage" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover \
          --verbosity normal
        # Параллельность управляется автоматически в .NET 9 :contentReference[oaicite:3]{index=3}

      # 5. Анализ SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectKey: 'anton-po-github_dotnet_postgresql'
          organization: 'anton-po-github'
          token: ${{ secrets.SONAR_TOKEN }}
          host-url: ${{ secrets.SONAR_HOST_URL }}
          scanner-mode: 'MSBuild'
          extra-properties: |
            sonar.verbose=true
            sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/**/coverage.opencover.xml
        # Используется официальный action SonarScanner for .NET (поддержка .NET 9) :contentReference[oaicite:4]{index=4}

      # 6. Публикация артефактов (опционально)
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: '**/TestResults/**/coverage.opencover.xml'
